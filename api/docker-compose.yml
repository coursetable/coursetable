version: '3'
services:
  api:
    build:
      context: ../
      dockerfile: ./api/Dockerfile
    image: coursetable/api:latest
    container_name: express
    depends_on:
      graphql-engine:
        condition: service_healthy
    environment:
      CANNY_KEY: ${CANNY_KEY?canny_key}
      FERRY_SECRET: ${FERRY_RELOAD_SECRET?ferry_reload_secret}
      FRONTEND_ENDPOINT: ${FRONTEND_ENDPOINT?frontend_endpoint}
      GRAPHQL_ENDPOINT: http://graphql-engine:8080/v1/graphql
      MYSQL_HOST: ${MYSQL_HOST?host}
      MYSQL_PORT: ${MYSQL_PORT?port}
      MYSQL_USER: ${MYSQL_USERNAME?username}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD?password}
      MYSQL_URL: ${MYSQL_URL?mysql_url}
      NODE_ENV: development
      SESSION_SECRET: ${SESSION_SECRET?session_secret}
      STUDENTS_DB: yaleplus
      YALIES_API_KEY: ${YALIES_API_KEY?yalies_api_key}
      SECURE_PORT: ${SECURE_PORT?secure_port}
      INSECURE_PORT: ${INSECURE_PORT?insecure_port}
      CHALLENGE_PASSWORD: ${CHALLENGE_PASSWORD?challenge_password}

  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v2.33.4
    ports:
      - '8085:8080'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${FERRY_POSTGRES_URI?ferry_db}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080']
      interval: 0.5s
      timeout: 10s
      retries: 60

  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    volumes:
      - ./redis:/usr/local/etc/redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 0.5s
      timeout: 10s
      retries: 60
