name: CD

on:
  push:
    branches: [azure-green-prod-ci, master]

jobs:
  frontend-build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    strategy:
      matrix:
        bun-version: [latest]

    steps:
      - uses: actions/checkout@v4
      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN_VALUE }}
          accountId: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          projectName: coursetable
          directory: build
          workingDirectory: frontend
          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
          wranglerVersion: '3'
          branch: master

  # api-build-and-push-image:
  #   runs-on: ubuntu-latest
  #   needs: [frontend-build-and-deploy]
  #   environment: 
  #     name: Green Production
  #     url: https://coursetable.com

  #   steps:
  #     # checkout the repo
  #     - name: 'Checkout GitHub Action'
  #       uses: actions/checkout@main
        
  #     - name: 'Login via Azure CLI'
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.SP_CREDENTIALS }}
      
  #     - name: 'Build and push DTS API image'
  #       uses: azure/docker-login@v1
  #       with:
  #         login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}
  #     - run: |
  #         docker build ./api/dts-api -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/dts-api:${{ github.sha }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/dts-api:latest
  #         docker push -a ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/dts-api

  #     - name: 'Build and push Sim API image'
  #       uses: azure/docker-login@v1
  #       with:
  #         login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}
  #     - run: |
  #         docker build ./api/sim-api -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/sim-api:${{ github.sha }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/sim-api:latest
  #         docker push -a ${{ secrets.REGISTRY_LOGIN_SERVER }}/dts/sim-api