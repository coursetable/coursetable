name: Production CD
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [master]
    paths:
      - 'frontend/**'
      - 'api/**'

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      api: ${{ steps.filter.outputs.api }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            frontend:
              - 'frontend/**'

  frontend-build-and-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    environment:
      name: Production
      url: https://coursetable.com
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Vercel CLI
        run: bun install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel and Alias Deployment
        run: .github/workflows/deployDomain.sh -t ${{ secrets.VERCEL_TOKEN }} -a coursetable.com

  api-build-and-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}

    environment:
      name: Production
      url: https://coursetable.com
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Build and Deploy Docker containers
        working-directory: ./api
        run: ./start.sh -p
