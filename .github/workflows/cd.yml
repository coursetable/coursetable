name: Production CD

on:
  push:
    branches: [master]
    paths:
      - 'frontend/**'
      - 'api/**'
      - '.github/workflows/cd.yml'

  workflow_dispatch:
    inputs:
      api:
        description: 'Deploy API'
        type: boolean
      frontend:
        description: 'Deploy Frontend'
        type: boolean

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.2
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          cancel_future: false
          only_status: 'waiting'
  changes:
    runs-on: ubuntu-latest
    needs: cancel-previous-runs
    permissions:
      pull-requests: read
    outputs:
      api: ${{ steps.filter.outputs.api }}
      frontend: ${{ steps.filter.outputs.frontend }}
      db: ${{ steps.filter.outputs.db }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.ref }}

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            frontend:
              - 'frontend/**'
            db:
              - 'api/drizzle/schema.ts'

  frontend-build-and-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || inputs.frontend}}
    environment:
      name: Production
      url: https://coursetable.com
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Vercel CLI
        run: bun install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel and Alias Deployment
        run: .github/workflows/deployDomain.sh -t ${{ secrets.VERCEL_TOKEN }} -a coursetable.com

  api-build-and-deploy:
    needs: changes
    if: ${{ ( needs.changes.outputs.api == 'true' || inputs.api ) && needs.changes.outputs.db == 'false'}}
    environment:
      name: Production
      url: https://coursetable.com
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Build and Deploy Docker containers
        working-directory: ./api
        if: github.event_name == 'push'
        run: ./start.sh -p
      - name: Build and Deploy Docker containers (Manual)
        working-directory: ./api
        if: github.event_name == 'workflow_dispatch'
        run: ./start.sh -p -o
